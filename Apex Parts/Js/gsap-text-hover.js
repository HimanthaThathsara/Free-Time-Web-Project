
(function () {
    "use strict"; var At = { grad: .9, turn: 360, rad: 360 / (2 * Math.PI) }, M = function (t) { return typeof t == "string" ? t.length > 0 : typeof t == "number" }, N = function (t, e, r) { return e === void 0 && (e = 0), r === void 0 && (r = Math.pow(10, e)), Math.round(r * t) / r + 0 }, j = function (t, e, r) { return e === void 0 && (e = 0), r === void 0 && (r = 1), t > r ? r : t > e ? t : e }, je = function (t) { return (t = isFinite(t) ? t % 360 : 0) > 0 ? t : t + 360 }, Fe = function (t) { return { r: j(t.r, 0, 255), g: j(t.g, 0, 255), b: j(t.b, 0, 255), a: j(t.a) } }, de = function (t) { return { r: N(t.r), g: N(t.g), b: N(t.b), a: N(t.a, 3) } }, Pt = /^#([0-9a-f]{3,8})$/i, ae = function (t) { var e = t.toString(16); return e.length < 2 ? "0" + e : e }, He = function (t) { var e = t.r, r = t.g, s = t.b, i = t.a, a = Math.max(e, r, s), l = a - Math.min(e, r, s), u = l ? a === e ? (r - s) / l : a === r ? 2 + (s - e) / l : 4 + (e - r) / l : 0; return { h: 60 * (u < 0 ? u + 6 : u), s: a ? l / a * 100 : 0, v: a / 255 * 100, a: i } }, _e = function (t) { var e = t.h, r = t.s, s = t.v, i = t.a; e = e / 360 * 6, r /= 100, s /= 100; var a = Math.floor(e), l = s * (1 - r), u = s * (1 - (e - a) * r), n = s * (1 - (1 - e + a) * r), o = a % 6; return { r: 255 * [s, u, l, l, n, s][o], g: 255 * [n, s, s, u, l, l][o], b: 255 * [l, l, n, s, s, u][o], a: i } }, Ge = function (t) { return { h: je(t.h), s: j(t.s, 0, 100), l: j(t.l, 0, 100), a: j(t.a) } }, Me = function (t) { return { h: N(t.h), s: N(t.s), l: N(t.l), a: N(t.a, 3) } }, Ve = function (t) { return _e((r = (e = t).s, { h: e.h, s: (r *= ((s = e.l) < 50 ? s : 100 - s) / 100) > 0 ? 2 * r / (s + r) * 100 : 0, v: s + r, a: e.a })); var e, r, s }, re = function (t) { return { h: (e = He(t)).h, s: (i = (200 - (r = e.s)) * (s = e.v) / 100) > 0 && i < 200 ? r * s / 100 / (i <= 100 ? i : 200 - i) * 100 : 0, l: i / 2, a: e.a }; var e, r, s, i }, xt = /^hsla?\(\s*([+-]?\d*\.?\d+)(deg|rad|grad|turn)?\s*,\s*([+-]?\d*\.?\d+)%\s*,\s*([+-]?\d*\.?\d+)%\s*(?:,\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i, Dt = /^hsla?\(\s*([+-]?\d*\.?\d+)(deg|rad|grad|turn)?\s+([+-]?\d*\.?\d+)%\s+([+-]?\d*\.?\d+)%\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i, kt = /^rgba?\(\s*([+-]?\d*\.?\d+)(%)?\s*,\s*([+-]?\d*\.?\d+)(%)?\s*,\s*([+-]?\d*\.?\d+)(%)?\s*(?:,\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i, jt = /^rgba?\(\s*([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s+([+-]?\d*\.?\d+)(%)?\s*(?:\/\s*([+-]?\d*\.?\d+)(%)?\s*)?\)$/i, ge = { string: [[function (t) { var e = Pt.exec(t); return e ? (t = e[1]).length <= 4 ? { r: parseInt(t[0] + t[0], 16), g: parseInt(t[1] + t[1], 16), b: parseInt(t[2] + t[2], 16), a: t.length === 4 ? N(parseInt(t[3] + t[3], 16) / 255, 2) : 1 } : t.length === 6 || t.length === 8 ? { r: parseInt(t.substr(0, 2), 16), g: parseInt(t.substr(2, 2), 16), b: parseInt(t.substr(4, 2), 16), a: t.length === 8 ? N(parseInt(t.substr(6, 2), 16) / 255, 2) : 1 } : null : null }, "hex"], [function (t) { var e = kt.exec(t) || jt.exec(t); return e ? e[2] !== e[4] || e[4] !== e[6] ? null : Fe({ r: Number(e[1]) / (e[2] ? 100 / 255 : 1), g: Number(e[3]) / (e[4] ? 100 / 255 : 1), b: Number(e[5]) / (e[6] ? 100 / 255 : 1), a: e[7] === void 0 ? 1 : Number(e[7]) / (e[8] ? 100 : 1) }) : null }, "rgb"], [function (t) { var e = xt.exec(t) || Dt.exec(t); if (!e) return null; var r, s, i = Ge({ h: (r = e[1], s = e[2], s === void 0 && (s = "deg"), Number(r) * (At[s] || 1)), s: Number(e[3]), l: Number(e[4]), a: e[5] === void 0 ? 1 : Number(e[5]) / (e[6] ? 100 : 1) }); return Ve(i) }, "hsl"]], object: [[function (t) { var e = t.r, r = t.g, s = t.b, i = t.a, a = i === void 0 ? 1 : i; return M(e) && M(r) && M(s) ? Fe({ r: Number(e), g: Number(r), b: Number(s), a: Number(a) }) : null }, "rgb"], [function (t) { var e = t.h, r = t.s, s = t.l, i = t.a, a = i === void 0 ? 1 : i; if (!M(e) || !M(r) || !M(s)) return null; var l = Ge({ h: Number(e), s: Number(r), l: Number(s), a: Number(a) }); return Ve(l) }, "hsl"], [function (t) { var e = t.h, r = t.s, s = t.v, i = t.a, a = i === void 0 ? 1 : i; if (!M(e) || !M(r) || !M(s)) return null; var l = function (u) { return { h: je(u.h), s: j(u.s, 0, 100), v: j(u.v, 0, 100), a: j(u.a) } }({ h: Number(e), s: Number(r), v: Number(s), a: Number(a) }); return _e(l) }, "hsv"]] }, Be = function (t, e) { for (var r = 0; r < e.length; r++) { var s = e[r][0](t); if (s) return [s, e[r][1]] } return [null, void 0] }, Ft = function (t) { return typeof t == "string" ? Be(t.trim(), ge.string) : typeof t == "object" && t !== null ? Be(t, ge.object) : [null, void 0] }, ve = function (t, e) { var r = re(t); return { h: r.h, s: j(r.s + 100 * e, 0, 100), l: r.l, a: r.a } }, Ee = function (t) { return (299 * t.r + 587 * t.g + 114 * t.b) / 1e3 / 255 }, Xe = function (t, e) { var r = re(t); return { h: r.h, s: r.s, l: j(r.l + 100 * e, 0, 100), a: r.a } }, be = function () { function t(e) { this.parsed = Ft(e)[0], this.rgba = this.parsed || { r: 0, g: 0, b: 0, a: 1 } } return t.prototype.isValid = function () { return this.parsed !== null }, t.prototype.brightness = function () { return N(Ee(this.rgba), 2) }, t.prototype.isDark = function () { return Ee(this.rgba) < .5 }, t.prototype.isLight = function () { return Ee(this.rgba) >= .5 }, t.prototype.toHex = function () { return e = de(this.rgba), r = e.r, s = e.g, i = e.b, l = (a = e.a) < 1 ? ae(N(255 * a)) : "", "#" + ae(r) + ae(s) + ae(i) + l; var e, r, s, i, a, l }, t.prototype.toRgb = function () { return de(this.rgba) }, t.prototype.toRgbString = function () { return e = de(this.rgba), r = e.r, s = e.g, i = e.b, (a = e.a) < 1 ? "rgba(" + r + ", " + s + ", " + i + ", " + a + ")" : "rgb(" + r + ", " + s + ", " + i + ")"; var e, r, s, i, a }, t.prototype.toHsl = function () { return Me(re(this.rgba)) }, t.prototype.toHslString = function () { return e = Me(re(this.rgba)), r = e.h, s = e.s, i = e.l, (a = e.a) < 1 ? "hsla(" + r + ", " + s + "%, " + i + "%, " + a + ")" : "hsl(" + r + ", " + s + "%, " + i + "%)"; var e, r, s, i, a }, t.prototype.toHsv = function () { return e = He(this.rgba), { h: N(e.h), s: N(e.s), v: N(e.v), a: N(e.a, 3) }; var e }, t.prototype.invert = function () { return P({ r: 255 - (e = this.rgba).r, g: 255 - e.g, b: 255 - e.b, a: e.a }); var e }, t.prototype.saturate = function (e) { return e === void 0 && (e = .1), P(ve(this.rgba, e)) }, t.prototype.desaturate = function (e) { return e === void 0 && (e = .1), P(ve(this.rgba, -e)) }, t.prototype.grayscale = function () { return P(ve(this.rgba, -1)) }, t.prototype.lighten = function (e) { return e === void 0 && (e = .1), P(Xe(this.rgba, e)) }, t.prototype.darken = function (e) { return e === void 0 && (e = .1), P(Xe(this.rgba, -e)) }, t.prototype.rotate = function (e) { return e === void 0 && (e = 15), this.hue(this.hue() + e) }, t.prototype.alpha = function (e) { return typeof e == "number" ? P({ r: (r = this.rgba).r, g: r.g, b: r.b, a: e }) : N(this.rgba.a, 3); var r }, t.prototype.hue = function (e) { var r = re(this.rgba); return typeof e == "number" ? P({ h: e, s: r.s, l: r.l, a: r.a }) : N(r.h) }, t.prototype.isEqual = function (e) { return this.toHex() === P(e).toHex() }, t }(), P = function (t) { return t instanceof be ? t : new be(t) }, Ue = [], Ht = function (t) { t.forEach(function (e) { Ue.indexOf(e) < 0 && (e(be, ge), Ue.push(e)) }) }; function _t(t, e) { var r = { white: "#ffffff", bisque: "#ffe4c4", blue: "#0000ff", cadetblue: "#5f9ea0", chartreuse: "#7fff00", chocolate: "#d2691e", coral: "#ff7f50", antiquewhite: "#faebd7", aqua: "#00ffff", azure: "#f0ffff", whitesmoke: "#f5f5f5", papayawhip: "#ffefd5", plum: "#dda0dd", blanchedalmond: "#ffebcd", black: "#000000", gold: "#ffd700", goldenrod: "#daa520", gainsboro: "#dcdcdc", cornsilk: "#fff8dc", cornflowerblue: "#6495ed", burlywood: "#deb887", aquamarine: "#7fffd4", beige: "#f5f5dc", crimson: "#dc143c", cyan: "#00ffff", darkblue: "#00008b", darkcyan: "#008b8b", darkgoldenrod: "#b8860b", darkkhaki: "#bdb76b", darkgray: "#a9a9a9", darkgreen: "#006400", darkgrey: "#a9a9a9", peachpuff: "#ffdab9", darkmagenta: "#8b008b", darkred: "#8b0000", darkorchid: "#9932cc", darkorange: "#ff8c00", darkslateblue: "#483d8b", gray: "#808080", darkslategray: "#2f4f4f", darkslategrey: "#2f4f4f", deeppink: "#ff1493", deepskyblue: "#00bfff", wheat: "#f5deb3", firebrick: "#b22222", floralwhite: "#fffaf0", ghostwhite: "#f8f8ff", darkviolet: "#9400d3", magenta: "#ff00ff", green: "#008000", dodgerblue: "#1e90ff", grey: "#808080", honeydew: "#f0fff0", hotpink: "#ff69b4", blueviolet: "#8a2be2", forestgreen: "#228b22", lawngreen: "#7cfc00", indianred: "#cd5c5c", indigo: "#4b0082", fuchsia: "#ff00ff", brown: "#a52a2a", maroon: "#800000", mediumblue: "#0000cd", lightcoral: "#f08080", darkturquoise: "#00ced1", lightcyan: "#e0ffff", ivory: "#fffff0", lightyellow: "#ffffe0", lightsalmon: "#ffa07a", lightseagreen: "#20b2aa", linen: "#faf0e6", mediumaquamarine: "#66cdaa", lemonchiffon: "#fffacd", lime: "#00ff00", khaki: "#f0e68c", mediumseagreen: "#3cb371", limegreen: "#32cd32", mediumspringgreen: "#00fa9a", lightskyblue: "#87cefa", lightblue: "#add8e6", midnightblue: "#191970", lightpink: "#ffb6c1", mistyrose: "#ffe4e1", moccasin: "#ffe4b5", mintcream: "#f5fffa", lightslategray: "#778899", lightslategrey: "#778899", navajowhite: "#ffdead", navy: "#000080", mediumvioletred: "#c71585", powderblue: "#b0e0e6", palegoldenrod: "#eee8aa", oldlace: "#fdf5e6", paleturquoise: "#afeeee", mediumturquoise: "#48d1cc", mediumorchid: "#ba55d3", rebeccapurple: "#663399", lightsteelblue: "#b0c4de", mediumslateblue: "#7b68ee", thistle: "#d8bfd8", tan: "#d2b48c", orchid: "#da70d6", mediumpurple: "#9370db", purple: "#800080", pink: "#ffc0cb", skyblue: "#87ceeb", springgreen: "#00ff7f", palegreen: "#98fb98", red: "#ff0000", yellow: "#ffff00", slateblue: "#6a5acd", lavenderblush: "#fff0f5", peru: "#cd853f", palevioletred: "#db7093", violet: "#ee82ee", teal: "#008080", slategray: "#708090", slategrey: "#708090", aliceblue: "#f0f8ff", darkseagreen: "#8fbc8f", darkolivegreen: "#556b2f", greenyellow: "#adff2f", seagreen: "#2e8b57", seashell: "#fff5ee", tomato: "#ff6347", silver: "#c0c0c0", sienna: "#a0522d", lavender: "#e6e6fa", lightgreen: "#90ee90", orange: "#ffa500", orangered: "#ff4500", steelblue: "#4682b4", royalblue: "#4169e1", turquoise: "#40e0d0", yellowgreen: "#9acd32", salmon: "#fa8072", saddlebrown: "#8b4513", sandybrown: "#f4a460", rosybrown: "#bc8f8f", darksalmon: "#e9967a", lightgoldenrodyellow: "#fafad2", snow: "#fffafa", lightgrey: "#d3d3d3", lightgray: "#d3d3d3", dimgray: "#696969", dimgrey: "#696969", olivedrab: "#6b8e23", olive: "#808000" }, s = {}; for (var i in r) s[r[i]] = i; var a = {}; t.prototype.toName = function (l) { if (!(this.rgba.a || this.rgba.r || this.rgba.g || this.rgba.b)) return "transparent"; var u, n, o = s[this.toHex()]; if (o) return o; if (l != null && l.closest) { var g = this.toRgb(), b = 1 / 0, w = "black"; if (!a.length) for (var T in r) a[T] = new t(r[T]).toRgb(); for (var f in r) { var I = (u = g, n = a[f], Math.pow(u.r - n.r, 2) + Math.pow(u.g - n.g, 2) + Math.pow(u.b - n.b, 2)); I < b && (b = I, w = f) } return w } }, e.string.push([function (l) { var u = l.toLowerCase(), n = u === "transparent" ? "#0000" : r[u]; return n ? new t(n).toRgb() : null }, "name"]) } function Gt(t) { return t && t.__esModule && Object.prototype.hasOwnProperty.call(t, "default") ? t.default : t } class Mt { constructor() { this.max = 1e3, this.map = new Map } get(e) { const r = this.map.get(e); if (r !== void 0) return this.map.delete(e), this.map.set(e, r), r } delete(e) { return this.map.delete(e) } set(e, r) { if (!this.delete(e) && r !== void 0) { if (this.map.size >= this.max) { const i = this.map.keys().next().value; this.delete(i) } this.map.set(e, r) } return this } } var Vt = Mt; const Bt = Object.freeze({ loose: !0 }), Xt = Object.freeze({}); var me = t => t ? typeof t != "object" ? Bt : t : Xt, ye = { exports: {} }; const Ut = "2.0.0", We = 256, Wt = Number.MAX_SAFE_INTEGER || 9007199254740991, qt = 16, zt = We - 6; var $e = { MAX_LENGTH: We, MAX_SAFE_COMPONENT_LENGTH: qt, MAX_SAFE_BUILD_LENGTH: zt, MAX_SAFE_INTEGER: Wt, RELEASE_TYPES: ["major", "premajor", "minor", "preminor", "patch", "prepatch", "prerelease"], SEMVER_SPEC_VERSION: Ut, FLAG_INCLUDE_PRERELEASE: 1, FLAG_LOOSE: 2 }, oe = typeof process == "object" && {} && {}.NODE_DEBUG && /\bsemver\b/i.test({}.NODE_DEBUG) ? (...t) => console.error("SEMVER", ...t) : () => { }; (function (t, e) { const { MAX_SAFE_COMPONENT_LENGTH: r, MAX_SAFE_BUILD_LENGTH: s, MAX_LENGTH: i } = $e, a = oe; e = t.exports = {}; const l = e.re = [], u = e.safeRe = [], n = e.src = [], o = e.t = {}; let g = 0; const b = "[a-zA-Z0-9-]", w = [["\\s", 1], ["\\d", i], [b, s]], T = I => { for (const [x, F] of w) I = I.split(`${x}*`).join(`${x}{0,${F}}`).split(`${x}+`).join(`${x}{1,${F}}`); return I }, f = (I, x, F) => { const ie = T(x), R = g++; a(I, R, x), o[I] = R, n[R] = x, l[R] = new RegExp(x, F ? "g" : void 0), u[R] = new RegExp(ie, F ? "g" : void 0) }; f("NUMERICIDENTIFIER", "0|[1-9]\\d*"), f("NUMERICIDENTIFIERLOOSE", "\\d+"), f("NONNUMERICIDENTIFIER", `\\d*[a-zA-Z-]${b}*`), f("MAINVERSION", `(${n[o.NUMERICIDENTIFIER]})\\.(${n[o.NUMERICIDENTIFIER]})\\.(${n[o.NUMERICIDENTIFIER]})`), f("MAINVERSIONLOOSE", `(${n[o.NUMERICIDENTIFIERLOOSE]})\\.(${n[o.NUMERICIDENTIFIERLOOSE]})\\.(${n[o.NUMERICIDENTIFIERLOOSE]})`), f("PRERELEASEIDENTIFIER", `(?:${n[o.NUMERICIDENTIFIER]}|${n[o.NONNUMERICIDENTIFIER]})`), f("PRERELEASEIDENTIFIERLOOSE", `(?:${n[o.NUMERICIDENTIFIERLOOSE]}|${n[o.NONNUMERICIDENTIFIER]})`), f("PRERELEASE", `(?:-(${n[o.PRERELEASEIDENTIFIER]}(?:\\.${n[o.PRERELEASEIDENTIFIER]})*))`), f("PRERELEASELOOSE", `(?:-?(${n[o.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${n[o.PRERELEASEIDENTIFIERLOOSE]})*))`), f("BUILDIDENTIFIER", `${b}+`), f("BUILD", `(?:\\+(${n[o.BUILDIDENTIFIER]}(?:\\.${n[o.BUILDIDENTIFIER]})*))`), f("FULLPLAIN", `v?${n[o.MAINVERSION]}${n[o.PRERELEASE]}?${n[o.BUILD]}?`), f("FULL", `^${n[o.FULLPLAIN]}$`), f("LOOSEPLAIN", `[v=\\s]*${n[o.MAINVERSIONLOOSE]}${n[o.PRERELEASELOOSE]}?${n[o.BUILD]}?`), f("LOOSE", `^${n[o.LOOSEPLAIN]}$`), f("GTLT", "((?:<|>)?=?)"), f("XRANGEIDENTIFIERLOOSE", `${n[o.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`), f("XRANGEIDENTIFIER", `${n[o.NUMERICIDENTIFIER]}|x|X|\\*`), f("XRANGEPLAIN", `[v=\\s]*(${n[o.XRANGEIDENTIFIER]})(?:\\.(${n[o.XRANGEIDENTIFIER]})(?:\\.(${n[o.XRANGEIDENTIFIER]})(?:${n[o.PRERELEASE]})?${n[o.BUILD]}?)?)?`), f("XRANGEPLAINLOOSE", `[v=\\s]*(${n[o.XRANGEIDENTIFIERLOOSE]})(?:\\.(${n[o.XRANGEIDENTIFIERLOOSE]})(?:\\.(${n[o.XRANGEIDENTIFIERLOOSE]})(?:${n[o.PRERELEASELOOSE]})?${n[o.BUILD]}?)?)?`), f("XRANGE", `^${n[o.GTLT]}\\s*${n[o.XRANGEPLAIN]}$`), f("XRANGELOOSE", `^${n[o.GTLT]}\\s*${n[o.XRANGEPLAINLOOSE]}$`), f("COERCEPLAIN", `(^|[^\\d])(\\d{1,${r}})(?:\\.(\\d{1,${r}}))?(?:\\.(\\d{1,${r}}))?`), f("COERCE", `${n[o.COERCEPLAIN]}(?:$|[^\\d])`), f("COERCEFULL", n[o.COERCEPLAIN] + `(?:${n[o.PRERELEASE]})?(?:${n[o.BUILD]})?(?:$|[^\\d])`), f("COERCERTL", n[o.COERCE], !0), f("COERCERTLFULL", n[o.COERCEFULL], !0), f("LONETILDE", "(?:~>?)"), f("TILDETRIM", `(\\s*)${n[o.LONETILDE]}\\s+`, !0), e.tildeTrimReplace = "$1~", f("TILDE", `^${n[o.LONETILDE]}${n[o.XRANGEPLAIN]}$`), f("TILDELOOSE", `^${n[o.LONETILDE]}${n[o.XRANGEPLAINLOOSE]}$`), f("LONECARET", "(?:\\^)"), f("CARETTRIM", `(\\s*)${n[o.LONECARET]}\\s+`, !0), e.caretTrimReplace = "$1^", f("CARET", `^${n[o.LONECARET]}${n[o.XRANGEPLAIN]}$`), f("CARETLOOSE", `^${n[o.LONECARET]}${n[o.XRANGEPLAINLOOSE]}$`), f("COMPARATORLOOSE", `^${n[o.GTLT]}\\s*(${n[o.LOOSEPLAIN]})$|^$`), f("COMPARATOR", `^${n[o.GTLT]}\\s*(${n[o.FULLPLAIN]})$|^$`), f("COMPARATORTRIM", `(\\s*)${n[o.GTLT]}\\s*(${n[o.LOOSEPLAIN]}|${n[o.XRANGEPLAIN]})`, !0), e.comparatorTrimReplace = "$1$2$3", f("HYPHENRANGE", `^\\s*(${n[o.XRANGEPLAIN]})\\s+-\\s+(${n[o.XRANGEPLAIN]})\\s*$`), f("HYPHENRANGELOOSE", `^\\s*(${n[o.XRANGEPLAINLOOSE]})\\s+-\\s+(${n[o.XRANGEPLAINLOOSE]})\\s*$`), f("STAR", "(<|>)?=?\\s*\\*"), f("GTE0", "^\\s*>=\\s*0\\.0\\.0\\s*$"), f("GTE0PRE", "^\\s*>=\\s*0\\.0\\.0-0\\s*$") })(ye, ye.exports); var we = ye.exports; const qe = /^[0-9]+$/, ze = (t, e) => { const r = qe.test(t), s = qe.test(e); return r && s && (t = +t, e = +e), t === e ? 0 : r && !s ? -1 : s && !r ? 1 : t < e ? -1 : 1 }; var Yt = { compareIdentifiers: ze, rcompareIdentifiers: (t, e) => ze(e, t) }; const le = oe, { MAX_LENGTH: Ye, MAX_SAFE_INTEGER: ce } = $e, { safeRe: Ke, t: Ze } = we, Kt = me, { compareIdentifiers: Z } = Yt; var Re = class G { constructor(e, r) { if (r = Kt(r), e instanceof G) { if (e.loose === !!r.loose && e.includePrerelease === !!r.includePrerelease) return e; e = e.version } else if (typeof e != "string") throw new TypeError(`Invalid version. Must be a string. Got type "${typeof e}".`); if (e.length > Ye) throw new TypeError(`version is longer than ${Ye} characters`); le("SemVer", e, r), this.options = r, this.loose = !!r.loose, this.includePrerelease = !!r.includePrerelease; const s = e.trim().match(r.loose ? Ke[Ze.LOOSE] : Ke[Ze.FULL]); if (!s) throw new TypeError(`Invalid Version: ${e}`); if (this.raw = e, this.major = +s[1], this.minor = +s[2], this.patch = +s[3], this.major > ce || this.major < 0) throw new TypeError("Invalid major version"); if (this.minor > ce || this.minor < 0) throw new TypeError("Invalid minor version"); if (this.patch > ce || this.patch < 0) throw new TypeError("Invalid patch version"); s[4] ? this.prerelease = s[4].split(".").map(i => { if (/^[0-9]+$/.test(i)) { const a = +i; if (a >= 0 && a < ce) return a } return i }) : this.prerelease = [], this.build = s[5] ? s[5].split(".") : [], this.format() } format() { return this.version = `${this.major}.${this.minor}.${this.patch}`, this.prerelease.length && (this.version += `-${this.prerelease.join(".")}`), this.version } toString() { return this.version } compare(e) { if (le("SemVer.compare", this.version, this.options, e), !(e instanceof G)) { if (typeof e == "string" && e === this.version) return 0; e = new G(e, this.options) } return e.version === this.version ? 0 : this.compareMain(e) || this.comparePre(e) } compareMain(e) { return e instanceof G || (e = new G(e, this.options)), Z(this.major, e.major) || Z(this.minor, e.minor) || Z(this.patch, e.patch) } comparePre(e) { if (e instanceof G || (e = new G(e, this.options)), this.prerelease.length && !e.prerelease.length) return -1; if (!this.prerelease.length && e.prerelease.length) return 1; if (!this.prerelease.length && !e.prerelease.length) return 0; let r = 0; do { const s = this.prerelease[r], i = e.prerelease[r]; if (le("prerelease compare", r, s, i), s === void 0 && i === void 0) return 0; if (i === void 0) return 1; if (s === void 0) return -1; if (s === i) continue; return Z(s, i) } while (++r) } compareBuild(e) { e instanceof G || (e = new G(e, this.options)); let r = 0; do { const s = this.build[r], i = e.build[r]; if (le("build compare", r, s, i), s === void 0 && i === void 0) return 0; if (i === void 0) return 1; if (s === void 0) return -1; if (s === i) continue; return Z(s, i) } while (++r) } inc(e, r, s) { switch (e) { case "premajor": this.prerelease.length = 0, this.patch = 0, this.minor = 0, this.major++, this.inc("pre", r, s); break; case "preminor": this.prerelease.length = 0, this.patch = 0, this.minor++, this.inc("pre", r, s); break; case "prepatch": this.prerelease.length = 0, this.inc("patch", r, s), this.inc("pre", r, s); break; case "prerelease": this.prerelease.length === 0 && this.inc("patch", r, s), this.inc("pre", r, s); break; case "major": (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) && this.major++, this.minor = 0, this.patch = 0, this.prerelease = []; break; case "minor": (this.patch !== 0 || this.prerelease.length === 0) && this.minor++, this.patch = 0, this.prerelease = []; break; case "patch": this.prerelease.length === 0 && this.patch++, this.prerelease = []; break; case "pre": { const i = Number(s) ? 1 : 0; if (!r && s === !1) throw new Error("invalid increment argument: identifier is empty"); if (this.prerelease.length === 0) this.prerelease = [i]; else { let a = this.prerelease.length; for (; --a >= 0;)typeof this.prerelease[a] == "number" && (this.prerelease[a]++, a = -2); if (a === -1) { if (r === this.prerelease.join(".") && s === !1) throw new Error("invalid increment argument: identifier already exists"); this.prerelease.push(i) } } if (r) { let a = [r, i]; s === !1 && (a = [r]), Z(this.prerelease[0], r) === 0 ? isNaN(this.prerelease[1]) && (this.prerelease = a) : this.prerelease = a } break } default: throw new Error(`invalid increment argument: ${e}`) }return this.raw = this.format(), this.build.length && (this.raw += `+${this.build.join(".")}`), this } }; const Je = Re; var J = (t, e, r) => new Je(t, r).compare(new Je(e, r)); const Zt = J; var Jt = (t, e, r) => Zt(t, e, r) === 0; const Qt = J; var er = (t, e, r) => Qt(t, e, r) !== 0; const tr = J; var rr = (t, e, r) => tr(t, e, r) > 0; const sr = J; var ir = (t, e, r) => sr(t, e, r) >= 0; const nr = J; var ar = (t, e, r) => nr(t, e, r) < 0; const or = J; var lr = (t, e, r) => or(t, e, r) <= 0; const cr = Jt, hr = er, ur = rr, fr = ir, pr = ar, dr = lr; var gr = (t, e, r, s) => { switch (e) { case "===": return typeof t == "object" && (t = t.version), typeof r == "object" && (r = r.version), t === r; case "!==": return typeof t == "object" && (t = t.version), typeof r == "object" && (r = r.version), t !== r; case "": case "=": case "==": return cr(t, r, s); case "!=": return hr(t, r, s); case ">": return ur(t, r, s); case ">=": return fr(t, r, s); case "<": return pr(t, r, s); case "<=": return dr(t, r, s); default: throw new TypeError(`Invalid operator: ${e}`) } }, Le, Qe; function vr() { if (Qe) return Le; Qe = 1; const t = Symbol("SemVer ANY"); class e { static get ANY() { return t } constructor(g, b) { if (b = r(b), g instanceof e) { if (g.loose === !!b.loose) return g; g = g.value } g = g.trim().split(/\s+/).join(" "), l("comparator", g, b), this.options = b, this.loose = !!b.loose, this.parse(g), this.semver === t ? this.value = "" : this.value = this.operator + this.semver.version, l("comp", this) } parse(g) { const b = this.options.loose ? s[i.COMPARATORLOOSE] : s[i.COMPARATOR], w = g.match(b); if (!w) throw new TypeError(`Invalid comparator: ${g}`); this.operator = w[1] !== void 0 ? w[1] : "", this.operator === "=" && (this.operator = ""), w[2] ? this.semver = new u(w[2], this.options.loose) : this.semver = t } toString() { return this.value } test(g) { if (l("Comparator.test", g, this.options.loose), this.semver === t || g === t) return !0; if (typeof g == "string") try { g = new u(g, this.options) } catch { return !1 } return a(g, this.operator, this.semver, this.options) } intersects(g, b) { if (!(g instanceof e)) throw new TypeError("a Comparator is required"); return this.operator === "" ? this.value === "" ? !0 : new n(g.value, b).test(this.value) : g.operator === "" ? g.value === "" ? !0 : new n(this.value, b).test(g.semver) : (b = r(b), b.includePrerelease && (this.value === "<0.0.0-0" || g.value === "<0.0.0-0") || !b.includePrerelease && (this.value.startsWith("<0.0.0") || g.value.startsWith("<0.0.0")) ? !1 : !!(this.operator.startsWith(">") && g.operator.startsWith(">") || this.operator.startsWith("<") && g.operator.startsWith("<") || this.semver.version === g.semver.version && this.operator.includes("=") && g.operator.includes("=") || a(this.semver, "<", g.semver, b) && this.operator.startsWith(">") && g.operator.startsWith("<") || a(this.semver, ">", g.semver, b) && this.operator.startsWith("<") && g.operator.startsWith(">"))) } } Le = e; const r = me, { safeRe: s, t: i } = we, a = gr, l = oe, u = Re, n = tt(); return Le } var Ie, et; function tt() { if (et) return Ie; et = 1; const t = /\s+/g; class e { constructor(c, v) { if (v = i(v), c instanceof e) return c.loose === !!v.loose && c.includePrerelease === !!v.includePrerelease ? c : new e(c.raw, v); if (c instanceof a) return this.raw = c.value, this.set = [[c]], this.formatted = void 0, this; if (this.options = v, this.loose = !!v.loose, this.includePrerelease = !!v.includePrerelease, this.raw = c.trim().replace(t, " "), this.set = this.raw.split("||").map(p => this.parseRange(p.trim())).filter(p => p.length), !this.set.length) throw new TypeError(`Invalid SemVer Range: ${this.raw}`); if (this.set.length > 1) { const p = this.set[0]; if (this.set = this.set.filter(E => !I(E[0])), this.set.length === 0) this.set = [p]; else if (this.set.length > 1) { for (const E of this.set) if (E.length === 1 && x(E[0])) { this.set = [E]; break } } } this.formatted = void 0 } get range() { if (this.formatted === void 0) { this.formatted = ""; for (let c = 0; c < this.set.length; c++) { c > 0 && (this.formatted += "||"); const v = this.set[c]; for (let p = 0; p < v.length; p++)p > 0 && (this.formatted += " "), this.formatted += v[p].toString().trim() } } return this.formatted } format() { return this.range } toString() { return this.range } parseRange(c) { const p = ((this.options.includePrerelease && T) | (this.options.loose && f)) + ":" + c, E = s.get(p); if (E) return E; const d = this.options.loose, m = d ? n[o.HYPHENRANGELOOSE] : n[o.HYPHENRANGE]; c = c.replace(m, te(this.options.includePrerelease)), l("hyphen replace", c), c = c.replace(n[o.COMPARATORTRIM], g), l("comparator trim", c), c = c.replace(n[o.TILDETRIM], b), l("tilde trim", c), c = c.replace(n[o.CARETTRIM], w), l("caret trim", c); let $ = c.split(" ").map(O => ie(O, this.options)).join(" ").split(/\s+/).map(O => ee(O, this.options)); d && ($ = $.filter(O => (l("loose invalid filter", O, this.options), !!O.match(n[o.COMPARATORLOOSE])))), l("range list", $); const y = new Map, L = $.map(O => new a(O, this.options)); for (const O of L) { if (I(O)) return [O]; y.set(O.value, O) } y.size > 1 && y.has("") && y.delete(""); const k = [...y.values()]; return s.set(p, k), k } intersects(c, v) { if (!(c instanceof e)) throw new TypeError("a Range is required"); return this.set.some(p => F(p, v) && c.set.some(E => F(E, v) && p.every(d => E.every(m => d.intersects(m, v))))) } test(c) { if (!c) return !1; if (typeof c == "string") try { c = new u(c, this.options) } catch { return !1 } for (let v = 0; v < this.set.length; v++)if (ke(this.set[v], c, this.options)) return !0; return !1 } } Ie = e; const r = Vt, s = new r, i = me, a = vr(), l = oe, u = Re, { safeRe: n, t: o, comparatorTrimReplace: g, tildeTrimReplace: b, caretTrimReplace: w } = we, { FLAG_INCLUDE_PRERELEASE: T, FLAG_LOOSE: f } = $e, I = h => h.value === "<0.0.0-0", x = h => h.value === "", F = (h, c) => { let v = !0; const p = h.slice(); let E = p.pop(); for (; v && p.length;)v = p.every(d => E.intersects(d, c)), E = p.pop(); return v }, ie = (h, c) => (l("comp", h, c), h = A(h, c), l("caret", h), h = C(h, c), l("tildes", h), h = K(h, c), l("xrange", h), h = X(h, c), l("stars", h), h), R = h => !h || h.toLowerCase() === "x" || h === "*", C = (h, c) => h.trim().split(/\s+/).map(v => S(v, c)).join(" "), S = (h, c) => { const v = c.loose ? n[o.TILDELOOSE] : n[o.TILDE]; return h.replace(v, (p, E, d, m, $) => { l("tilde", h, p, E, d, m, $); let y; return R(E) ? y = "" : R(d) ? y = `>=${E}.0.0 <${+E + 1}.0.0-0` : R(m) ? y = `>=${E}.${d}.0 <${E}.${+d + 1}.0-0` : $ ? (l("replaceTilde pr", $), y = `>=${E}.${d}.${m}-${$} <${E}.${+d + 1}.0-0`) : y = `>=${E}.${d}.${m} <${E}.${+d + 1}.0-0`, l("tilde return", y), y }) }, A = (h, c) => h.trim().split(/\s+/).map(v => V(v, c)).join(" "), V = (h, c) => { l("caret", h, c); const v = c.loose ? n[o.CARETLOOSE] : n[o.CARET], p = c.includePrerelease ? "-0" : ""; return h.replace(v, (E, d, m, $, y) => { l("caret", h, E, d, m, $, y); let L; return R(d) ? L = "" : R(m) ? L = `>=${d}.0.0${p} <${+d + 1}.0.0-0` : R($) ? d === "0" ? L = `>=${d}.${m}.0${p} <${d}.${+m + 1}.0-0` : L = `>=${d}.${m}.0${p} <${+d + 1}.0.0-0` : y ? (l("replaceCaret pr", y), d === "0" ? m === "0" ? L = `>=${d}.${m}.${$}-${y} <${d}.${m}.${+$ + 1}-0` : L = `>=${d}.${m}.${$}-${y} <${d}.${+m + 1}.0-0` : L = `>=${d}.${m}.${$}-${y} <${+d + 1}.0.0-0`) : (l("no pr"), d === "0" ? m === "0" ? L = `>=${d}.${m}.${$}${p} <${d}.${m}.${+$ + 1}-0` : L = `>=${d}.${m}.${$}${p} <${d}.${+m + 1}.0-0` : L = `>=${d}.${m}.${$} <${+d + 1}.0.0-0`), l("caret return", L), L }) }, K = (h, c) => (l("replaceXRanges", h, c), h.split(/\s+/).map(v => B(v, c)).join(" ")), B = (h, c) => { h = h.trim(); const v = c.loose ? n[o.XRANGELOOSE] : n[o.XRANGE]; return h.replace(v, (p, E, d, m, $, y) => { l("xRange", h, p, E, d, m, $, y); const L = R(d), k = L || R(m), O = k || R($), ne = O; return E === "=" && ne && (E = ""), y = c.includePrerelease ? "-0" : "", L ? E === ">" || E === "<" ? p = "<0.0.0-0" : p = "*" : E && ne ? (k && (m = 0), $ = 0, E === ">" ? (E = ">=", k ? (d = +d + 1, m = 0, $ = 0) : (m = +m + 1, $ = 0)) : E === "<=" && (E = "<", k ? d = +d + 1 : m = +m + 1), E === "<" && (y = "-0"), p = `${E + d}.${m}.${$}${y}`) : k ? p = `>=${d}.0.0${y} <${+d + 1}.0.0-0` : O && (p = `>=${d}.${m}.0${y} <${d}.${+m + 1}.0-0`), l("xRange return", p), p }) }, X = (h, c) => (l("replaceStars", h, c), h.trim().replace(n[o.STAR], "")), ee = (h, c) => (l("replaceGTE0", h, c), h.trim().replace(n[c.includePrerelease ? o.GTE0PRE : o.GTE0], "")), te = h => (c, v, p, E, d, m, $, y, L, k, O, ne) => (R(p) ? v = "" : R(E) ? v = `>=${p}.0.0${h ? "-0" : ""}` : R(d) ? v = `>=${p}.${E}.0${h ? "-0" : ""}` : m ? v = `>=${v}` : v = `>=${v}${h ? "-0" : ""}`, R(L) ? y = "" : R(k) ? y = `<${+L + 1}.0.0-0` : R(O) ? y = `<${L}.${+k + 1}.0-0` : ne ? y = `<=${L}.${k}.${O}-${ne}` : h ? y = `<${L}.${k}.${+O + 1}-0` : y = `<=${y}`, `${v} ${y}`.trim()), ke = (h, c, v) => { for (let p = 0; p < h.length; p++)if (!h[p].test(c)) return !1; if (c.prerelease.length && !v.includePrerelease) { for (let p = 0; p < h.length; p++)if (l(h[p].semver), h[p].semver !== a.ANY && h[p].semver.prerelease.length > 0) { const E = h[p].semver; if (E.major === c.major && E.minor === c.minor && E.patch === c.patch) return !0 } return !1 } return !0 }; return Ie } const Er = tt(); var br = (t, e, r) => { try { e = new Er(e, r) } catch { return !1 } return e.test(t) }; const rt = Gt(br); class Te { constructor() { this.dependencies = [], this.await = [] } static init() { return window.hasOwnProperty("FlowbaseBoosters") || (window.FlowbaseBoosters = {}), window.FlowbaseBoosters.hasOwnProperty("deps") || (window.FlowbaseBoosters.deps = new Te), window.FlowbaseBoosters.deps } register(e) { this.dependencies.push(e); const r = e.get(); for (const s of this.await) s.name === e.name && rt(e.version, s.version) && s.resolve(r) } get(e, r) { return new Promise((s, i) => { const a = this.dependencies.find(l => e === l.name && rt(l.version, r)); if (!a) { const l = { name: e, version: r, resolve: u => s(u) }; setTimeout(() => { i(), this.await.splice(this.await.indexOf(l), 1) }, 1e4), this.await.push(l) } a && s(a.get()) }) } } class mr { constructor() { this.data = {} } set(e, r) { this.data[e] = r } get(e) { return this.data[e] } } const W = {
        Dependencies: Te, Booster: class {
            constructor(e) { this.options = e } log(e, r) {
                const s = `
      display: inline-block;
      padding: 4px 6px;
      border-radius: 4px;
      line-height: 1.5em;
      color: #282735;
      background: linear-gradient(45deg,
        rgba(185, 205, 255, 0.4) 0%,
        rgba(201, 182, 255, 0.4) 33%,
        rgba(239, 184, 255, 0.4) 66%,
        rgba(255, 210, 177, 0.4) 100%);
        `, i = [`%c[${this.options.title}] ${e}. Link to documentation ${this.options.documentationLink}`, s]; r ? (console.group(...i), Array.isArray(r) ? console.log(...r) : console.log(r), console.groupEnd()) : console.log(...i)
            } validate(e, r, s) {
                if (!e.validate) return !0; if (typeof e.validate == "function") { if (!e.validate(s)) return this.log(`Invalid value "${s}" for attribute "${r}"`), !1 } else if (!e.validate.includes(s)) return this.log(`Invalid value "${s}" for attribute "${r}"`, [`%cPossible values:%c
`+ e.validate.map(i => `• ${i}`).join(`
`), "font-weight: 700;", "font-weight: initial;"]), !1; return !0
            } parse(e) { const r = new mr; for (const s in this.options.attributes) { const i = this.options.attributes[s], a = e.getAttribute(s); if (!a || !this.validate(i, s, a)) { r.set(s, i.defaultValue); continue } let l = a; i.parse && (l = i.parse(a) ?? i.defaultValue), r.set(s, l) } this.options.apply.call(this, e, r) } getElements() { return document.querySelectorAll(`[${this.options.name}]`) } init() { this.getElements().forEach(r => this.parse(r)) }
        }, parse: { stringToBoolean: t => t !== "false" }, validation: { isValidCSSPropertyValue: (t, e) => ["auto", "initial", "inherit", "unset"].includes(e) ? !1 : CSS.supports(t, e), isValidType: (t, e) => e.includes(t), isBoolean: t => /^(true|false)$/.test(t), isNumber: t => !isNaN(Number(t)) }
    }; (function () { function t() { for (var s = arguments.length, i = 0; i < s; i++) { var a = i < 0 || arguments.length <= i ? void 0 : arguments[i]; a.nodeType === 1 || a.nodeType === 11 ? this.appendChild(a) : this.appendChild(document.createTextNode(String(a))) } } function e() { for (; this.lastChild;)this.removeChild(this.lastChild); arguments.length && this.append.apply(this, arguments) } function r() { for (var s = this.parentNode, i = arguments.length, a = new Array(i), l = 0; l < i; l++)a[l] = arguments[l]; var u = a.length; if (s) for (u || s.removeChild(this); u--;) { var n = a[u]; typeof n != "object" ? n = this.ownerDocument.createTextNode(n) : n.parentNode && n.parentNode.removeChild(n), u ? s.insertBefore(this.previousSibling, n) : s.replaceChild(n, this) } } typeof Element < "u" && (Element.prototype.append || (Element.prototype.append = t, DocumentFragment.prototype.append = t), Element.prototype.replaceChildren || (Element.prototype.replaceChildren = e, DocumentFragment.prototype.replaceChildren = e), Element.prototype.replaceWith || (Element.prototype.replaceWith = r, DocumentFragment.prototype.replaceWith = r)) })(); function yr(t, e) { if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function") } function st(t, e) { for (var r = 0; r < e.length; r++) { var s = e[r]; s.enumerable = s.enumerable || !1, s.configurable = !0, "value" in s && (s.writable = !0), Object.defineProperty(t, s.key, s) } } function it(t, e, r) { return e && st(t.prototype, e), r && st(t, r), t } function $r(t, e, r) { return e in t ? Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }) : t[e] = r, t } function nt(t, e) { var r = Object.keys(t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(t); e && (s = s.filter(function (i) { return Object.getOwnPropertyDescriptor(t, i).enumerable })), r.push.apply(r, s) } return r } function at(t) { for (var e = 1; e < arguments.length; e++) { var r = arguments[e] != null ? arguments[e] : {}; e % 2 ? nt(Object(r), !0).forEach(function (s) { $r(t, s, r[s]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(r)) : nt(Object(r)).forEach(function (s) { Object.defineProperty(t, s, Object.getOwnPropertyDescriptor(r, s)) }) } return t } function ot(t, e) { return Rr(t) || Ir(t, e) || lt(t, e) || Or() } function D(t) { return wr(t) || Lr(t) || lt(t) || Tr() } function wr(t) { if (Array.isArray(t)) return Oe(t) } function Rr(t) { if (Array.isArray(t)) return t } function Lr(t) { if (typeof Symbol < "u" && Symbol.iterator in Object(t)) return Array.from(t) } function Ir(t, e) { if (!(typeof Symbol > "u" || !(Symbol.iterator in Object(t)))) { var r = [], s = !0, i = !1, a = void 0; try { for (var l = t[Symbol.iterator](), u; !(s = (u = l.next()).done) && (r.push(u.value), !(e && r.length === e)); s = !0); } catch (n) { i = !0, a = n } finally { try { !s && l.return != null && l.return() } finally { if (i) throw a } } return r } } function lt(t, e) { if (t) { if (typeof t == "string") return Oe(t, e); var r = Object.prototype.toString.call(t).slice(8, -1); if (r === "Object" && t.constructor && (r = t.constructor.name), r === "Map" || r === "Set") return Array.from(t); if (r === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)) return Oe(t, e) } } function Oe(t, e) { (e == null || e > t.length) && (e = t.length); for (var r = 0, s = new Array(e); r < e; r++)s[r] = t[r]; return s } function Tr() {
        throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
    } function Or() {
        throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)
    } function q(t, e) { return Object.getOwnPropertyNames(Object(t)).reduce(function (r, s) { var i = Object.getOwnPropertyDescriptor(Object(t), s), a = Object.getOwnPropertyDescriptor(Object(e), s); return Object.defineProperty(r, s, a || i) }, {}) } function se(t) { return typeof t == "string" } function Ne(t) { return Array.isArray(t) } function he() { var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e = q(t), r; return e.types !== void 0 ? r = e.types : e.split !== void 0 && (r = e.split), r !== void 0 && (e.types = (se(r) || Ne(r) ? String(r) : "").split(",").map(function (s) { return String(s).trim() }).filter(function (s) { return /((line)|(word)|(char))/i.test(s) })), (e.absolute || e.position) && (e.absolute = e.absolute || /absolute/.test(t.position)), e } function Ce(t) { var e = se(t) || Ne(t) ? String(t) : ""; return { none: !e, lines: /line/i.test(e), words: /word/i.test(e), chars: /char/i.test(e) } } function ue(t) { return t !== null && typeof t == "object" } function Nr(t) { return ue(t) && /^(1|3|11)$/.test(t.nodeType) } function Cr(t) { return typeof t == "number" && t > -1 && t % 1 === 0 } function Sr(t) { return ue(t) && Cr(t.length) } function z(t) { return Ne(t) ? t : t == null ? [] : Sr(t) ? Array.prototype.slice.call(t) : [t] } function ct(t) { var e = t; return se(t) && (/^(#[a-z]\w+)$/.test(t.trim()) ? e = document.getElementById(t.trim().slice(1)) : e = document.querySelectorAll(t)), z(e).reduce(function (r, s) { return [].concat(D(r), D(z(s).filter(Nr))) }, []) } var Ar = Object.entries, fe = "_splittype", H = {}, Pr = 0; function _(t, e, r) { if (!ue(t)) return console.warn("[data.set] owner is not an object"), null; var s = t[fe] || (t[fe] = ++Pr), i = H[s] || (H[s] = {}); return r === void 0 ? e && Object.getPrototypeOf(e) === Object.prototype && (H[s] = at(at({}, i), e)) : e !== void 0 && (i[e] = r), r } function Y(t, e) { var r = ue(t) ? t[fe] : null, s = r && H[r] || {}; return e === void 0 ? s : s[e] } function ht(t) { var e = t && t[fe]; e && (delete t[e], delete H[e]) } function xr() { Object.keys(H).forEach(function (t) { delete H[t] }) } function Dr() { Ar(H).forEach(function (t) { var e = ot(t, 2), r = e[0], s = e[1], i = s.isRoot, a = s.isSplit; (!i || !a) && (H[r] = null, delete H[r]) }) } function kr(t) { var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : " ", r = t ? String(t) : ""; return r.trim().replace(/\s+/g, " ").split(e) } var Se = "\\ud800-\\udfff", ut = "\\u0300-\\u036f\\ufe20-\\ufe23", ft = "\\u20d0-\\u20f0", pt = "\\ufe0e\\ufe0f", jr = "[".concat(Se, "]"), Ae = "[".concat(ut).concat(ft, "]"), Pe = "\\ud83c[\\udffb-\\udfff]", Fr = "(?:".concat(Ae, "|").concat(Pe, ")"), dt = "[^".concat(Se, "]"), gt = "(?:\\ud83c[\\udde6-\\uddff]){2}", vt = "[\\ud800-\\udbff][\\udc00-\\udfff]", Et = "\\u200d", bt = "".concat(Fr, "?"), mt = "[".concat(pt, "]?"), Hr = "(?:" + Et + "(?:" + [dt, gt, vt].join("|") + ")" + mt + bt + ")*", _r = mt + bt + Hr, Gr = "(?:".concat(["".concat(dt).concat(Ae, "?"), Ae, gt, vt, jr].join("|"), `
)`), Mr = RegExp("".concat(Pe, "(?=").concat(Pe, ")|").concat(Gr).concat(_r), "g"), Vr = [Et, Se, ut, ft, pt], Br = RegExp("[".concat(Vr.join(""), "]")); function Xr(t) { return t.split("") } function yt(t) { return Br.test(t) } function Ur(t) { return t.match(Mr) || [] } function Wr(t) { return yt(t) ? Ur(t) : Xr(t) } function qr(t) { return t == null ? "" : String(t) } function zr(t) { var e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : ""; return t = qr(t), t && se(t) && !e && yt(t) ? Wr(t) : t.split(e) } function xe(t, e) { var r = document.createElement(t); return e && Object.keys(e).forEach(function (s) { var i = e[s], a = se(i) ? i.trim() : i; a === null || a === "" || (s === "children" ? r.append.apply(r, D(z(a))) : r.setAttribute(s, a)) }), r } var De = { splitClass: "", lineClass: "line", wordClass: "word", charClass: "char", types: ["lines", "words", "chars"], absolute: !1, tagName: "div" }; function Yr(t, e) { e = q(De, e); var r = Ce(e.types), s = e.tagName, i = t.nodeValue, a = document.createDocumentFragment(), l = [], u = []; return /^\s/.test(i) && a.append(" "), l = kr(i).reduce(function (n, o, g, b) { var w, T; return r.chars && (T = zr(o).map(function (f) { var I = xe(s, { class: "".concat(e.splitClass, " ").concat(e.charClass), style: "display: inline-block;", children: f }); return _(I, "isChar", !0), u = [].concat(D(u), [I]), I })), r.words || r.lines ? (w = xe(s, { class: "".concat(e.wordClass, " ").concat(e.splitClass), style: "display: inline-block; ".concat(r.words && e.absolute ? "position: relative;" : ""), children: r.chars ? T : o }), _(w, { isWord: !0, isWordStart: !0, isWordEnd: !0 }), a.appendChild(w)) : T.forEach(function (f) { a.appendChild(f) }), g < b.length - 1 && a.append(" "), r.words ? n.concat(w) : n }, []), /\s$/.test(i) && a.append(" "), t.replaceWith(a), { words: l, chars: u } } function $t(t, e) { var r = t.nodeType, s = { words: [], chars: [] }; if (!/(1|3|11)/.test(r)) return s; if (r === 3 && /\S/.test(t.nodeValue)) return Yr(t, e); var i = z(t.childNodes); if (i.length && (_(t, "isSplit", !0), !Y(t).isRoot)) { t.style.display = "inline-block", t.style.position = "relative"; var a = t.nextSibling, l = t.previousSibling, u = t.textContent || "", n = a ? a.textContent : " ", o = l ? l.textContent : " "; _(t, { isWordEnd: /\s$/.test(u) || /^\s/.test(n), isWordStart: /^\s/.test(u) || /\s$/.test(o) }) } return i.reduce(function (g, b) { var w = $t(b, e), T = w.words, f = w.chars; return { words: [].concat(D(g.words), D(T)), chars: [].concat(D(g.chars), D(f)) } }, s) } function Kr(t, e, r, s) { if (!r.absolute) return { top: e ? t.offsetTop : null }; var i = t.offsetParent, a = ot(s, 2), l = a[0], u = a[1], n = 0, o = 0; if (i && i !== document.body) { var g = i.getBoundingClientRect(); n = g.x + l, o = g.y + u } var b = t.getBoundingClientRect(), w = b.width, T = b.height, f = b.x, I = b.y, x = I + u - o, F = f + l - n; return { width: w, height: T, top: x, left: F } } function wt(t) { Y(t).isWord ? (ht(t), t.replaceWith.apply(t, D(t.childNodes))) : z(t.children).forEach(function (e) { return wt(e) }) } var Zr = function () { return document.createDocumentFragment() }; function Jr(t, e, r) { var s = Ce(e.types), i = e.tagName, a = t.getElementsByTagName("*"), l = [], u = [], n = null, o, g, b, w = [], T = t.parentElement, f = t.nextElementSibling, I = Zr(), x = window.getComputedStyle(t), F = x.textAlign, ie = parseFloat(x.fontSize), R = ie * .2; return e.absolute && (b = { left: t.offsetLeft, top: t.offsetTop, width: t.offsetWidth }, g = t.offsetWidth, o = t.offsetHeight, _(t, { cssWidth: t.style.width, cssHeight: t.style.height })), z(a).forEach(function (C) { var S = C.parentElement === t, A = Kr(C, S, e, r), V = A.width, K = A.height, B = A.top, X = A.left; /^br$/i.test(C.nodeName) || (s.lines && S && ((n === null || B - n >= R) && (n = B, l.push(u = [])), u.push(C)), e.absolute && _(C, { top: B, left: X, width: V, height: K })) }), T && T.removeChild(t), s.lines && (w = l.map(function (C) { var S = xe(i, { class: "".concat(e.splitClass, " ").concat(e.lineClass), style: "display: block; text-align: ".concat(F, "; width: 100%;") }); _(S, "isLine", !0); var A = { height: 0, top: 1e4 }; return I.appendChild(S), C.forEach(function (V, K, B) { var X = Y(V), ee = X.isWordEnd, te = X.top, ke = X.height, h = B[K + 1]; A.height = Math.max(A.height, ke), A.top = Math.min(A.top, te), S.appendChild(V), ee && Y(h).isWordStart && S.append(" ") }), e.absolute && _(S, { height: A.height, top: A.top }), S }), s.words || wt(I), t.replaceChildren(I)), e.absolute && (t.style.width = "".concat(t.style.width || g, "px"), t.style.height = "".concat(o, "px"), z(a).forEach(function (C) { var S = Y(C), A = S.isLine, V = S.top, K = S.left, B = S.width, X = S.height, ee = Y(C.parentElement), te = !A && ee.isLine; C.style.top = "".concat(te ? V - ee.top : V, "px"), C.style.left = A ? "".concat(b.left, "px") : "".concat(K - (te ? b.left : 0), "px"), C.style.height = "".concat(X, "px"), C.style.width = A ? "".concat(b.width, "px") : "".concat(B, "px"), C.style.position = "absolute" })), T && (f ? T.insertBefore(t, f) : T.appendChild(t)), w } var Q = q(De, {}), Rt = function () { it(t, null, [{ key: "clearData", value: function () { xr() } }, { key: "setDefaults", value: function (r) { return Q = q(Q, he(r)), De } }, { key: "revert", value: function (r) { ct(r).forEach(function (s) { var i = Y(s), a = i.isSplit, l = i.html, u = i.cssWidth, n = i.cssHeight; a && (s.innerHTML = l, s.style.width = u || "", s.style.height = n || "", ht(s)) }) } }, { key: "create", value: function (r, s) { return new t(r, s) } }, { key: "data", get: function () { return H } }, { key: "defaults", get: function () { return Q }, set: function (r) { Q = q(Q, he(r)) } }]); function t(e, r) { yr(this, t), this.isSplit = !1, this.settings = q(Q, he(r)), this.elements = ct(e), this.split() } return it(t, [{ key: "split", value: function (r) { var s = this; this.revert(), this.elements.forEach(function (l) { _(l, "html", l.innerHTML) }), this.lines = [], this.words = [], this.chars = []; var i = [window.pageXOffset, window.pageYOffset]; r !== void 0 && (this.settings = q(this.settings, he(r))); var a = Ce(this.settings.types); a.none || (this.elements.forEach(function (l) { _(l, "isRoot", !0); var u = $t(l, s.settings), n = u.words, o = u.chars; s.words = [].concat(D(s.words), D(n)), s.chars = [].concat(D(s.chars), D(o)) }), this.elements.forEach(function (l) { if (a.lines || s.settings.absolute) { var u = Jr(l, s.settings, i); s.lines = [].concat(D(s.lines), D(u)) } }), this.isSplit = !0, window.scrollTo(i[0], i[1]), Dr()) } }, { key: "revert", value: function () { this.isSplit && (this.lines = null, this.words = null, this.chars = null, this.isSplit = !1), t.revert(this.elements) } }]), t }(); const Qr = (t, e) => { let r; return (...s) => { clearTimeout(r), r = setTimeout(() => t(...s), e) } }; class pe { constructor(e, r, s) { var i, a, l; if (this.target = e, this.options = r, this.resizeCallback = s, this.lines = null, this.words = null, this.chars = null, !(e instanceof HTMLElement)) throw new Error("Invalid target provided"); Rt.setDefaults({ lineClass: "fb-line", wordClass: "fb-word", charClass: "fb-char" }), this.split(), ((i = this.options) != null && i.absolute || (l = (a = this.options) == null ? void 0 : a.split) != null && l.includes("lines") || this.resizeCallback) && this.initResizeObserver() } split() { const e = new Rt(this.target, this.options); this.lines = e.lines, this.words = e.words, this.chars = e.chars } initResizeObserver() { new ResizeObserver(Qr(r => this.handleResize(r), 100)).observe(this.target) } handleResize(e) { const [{ contentRect: r }] = e, s = Math.floor(r.width); this.prevTargetWidth && this.prevTargetWidth !== s && (this.options && (this.options.absolute || /lines/.test(String(this.options.split))) && this.split(), this.resizeCallback && this.resizeCallback()), this.prevTargetWidth = s } } const es = { colorEnd: `var(--fb-hover-color-end, ${{ colorEnd: "currentColor" }.colorEnd})` }; class ts { constructor(e, r, s) { this.element = e, this.gsap = r, this.options = s, this.originalChars = [], this.duplicateChars = [], this.split = new pe(this.element, { split: "words,chars" }), this.split.chars && this.init() } init() { this.setup(), this.initAnimation(); const e = () => { var s; return (s = this.animation) == null ? void 0 : s.play() }, r = () => { var s; return (s = this.animation) == null ? void 0 : s.reverse() }; this.element.addEventListener("mouseenter", e, { passive: !0 }), this.element.addEventListener("mouseleave", r, { passive: !0 }), this.element.addEventListener("touchstart", e, { passive: !0 }), this.element.addEventListener("touchend", r, { passive: !0 }), this.element.addEventListener("touchcancel", r, { passive: !0 }) } setup() { if (this.split.chars) for (const e of this.split.chars) { const r = document.createElement("div"), s = document.createElement("div"); r.innerHTML = e.innerHTML, s.innerHTML = e.innerHTML, e.innerHTML = "", s.style.position = "absolute", s.style.inset = "0", s.style.color = this.options.hoverColorEnd || es.colorEnd, e.style.position = "relative", e.style.overflowY = "hidden", e.style.verticalAlign = "bottom", e.append(r, s), this.originalChars.push(r), this.duplicateChars.push(s) } } initAnimation() { this.animation = this.gsap.timeline({ paused: !0, defaults: { duration: .8, ease: "power3.inOut", stagger: .03 } }).timeScale(this.options.speedFactor).to(this.originalChars, { yPercent: -100 }, 0).from(this.duplicateChars, { yPercent: 100 }, .1) } } const rs = { cursorColor: `var(--fb-hover-cursor-color, ${{ cursorColor: "currentColor" }.cursorColor})` }, ss = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "!", "@", "#", "$", "%", "^", "&", "*", "-", "_", "+", "=", ";", ":", "<", ">", ","]; class is { constructor(e, r, s) { this.element = e, this.gsap = r, this.options = s, this.originalChars = [], this.split = new pe(this.element, { split: "words,chars" }), this.split.chars && this.init() } init() { this.setup(); const e = () => this.play(); this.element.addEventListener("mouseenter", e, { passive: !0 }), this.element.addEventListener("touchstart", e, { passive: !0 }) } setup() { if (this.split.chars) { this.originalChars = this.split.chars.map(e => e.innerHTML); for (const e of this.split.chars) { const r = document.createElement("div"), s = document.createElement("div"); this.options.hoverCursorClass && s.classList.add(this.options.hoverCursorClass), r.innerHTML = e.innerHTML, e.innerHTML = "", e.append(r, s), e.style.position = "relative", e.style.setProperty("--fb-cursor-opacity", "0"), s.style.position = "absolute", s.style.top = "0", s.style.left = "0", s.style.width = "1ch", s.style.height = "100%", s.style.backgroundColor = this.options.hoverCursorColor || rs.cursorColor, s.style.opacity = "var(--fb-cursor-opacity)" } } } play() { var e; this.reset(), (e = this.split.chars) == null || e.forEach((r, s) => { const i = r.firstChild, a = i.innerHTML; let l = 0; this.gsap.timeline({ onComplete: () => { this.gsap.set(r, { "--fb-cursor-opacity": 0 }), this.gsap.set(i, { innerHTML: a, delay: .03 }) } }).timeScale(this.options.speedFactor).fromTo(i, { opacity: 0 }, { opacity: 1, innerHTML: () => this.gsap.utils.random(ss), delay: (s + 1) * .07, duration: .03, repeat: 3, repeatDelay: .04, repeatRefresh: !0, onStart: () => { this.gsap.set(r, { "--fb-cursor-opacity": 1 }) }, onRepeat: () => { l++, l === 1 && this.gsap.set(r, { "--fb-cursor-opacity": 0 }) } }) }) } reset() { var e; (e = this.split.chars) == null || e.forEach((r, s) => { const i = r.firstChild; this.gsap.killTweensOf(i), this.gsap.set(r, { "--fb-cursor-opacity": 0 }), this.gsap.set(i, { innerHTML: this.originalChars[s] }) }) } } const Lt = { bgColor: "#fff", bgInset: "-2px -4px" }, It = { bgColor: `var(--fb-hover-bg-color, ${Lt.bgColor})`, bgInset: `var(--fb-hover-bg-inset, ${Lt.bgInset})` }, ns = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "!", "@", "#", "$", "%", "^", "&", "*", "-", "_", "+", "=", ";", ":", "<", ">", ","]; class Tt { constructor(e, r, s) { this.element = e, this.gsap = r, this.options = s, this.originalChars = [], this.split = new pe(this.element, { split: "words,chars" }), this.split.chars && this.init() } init() { this.setup(); const e = () => this.play(), r = () => this.reverse(); this.element.addEventListener("mouseenter", e, { passive: !0 }), this.element.addEventListener("mouseleave", r, { passive: !0 }), this.element.addEventListener("touchstart", e, { passive: !0 }), this.element.addEventListener("touchend", r, { passive: !0 }), this.element.addEventListener("touchcancel", r, { passive: !0 }) } setup() { this.split.chars && (this.originalChars = this.split.chars.map(e => e.innerHTML), this.element.style.position = "relative", this.element.style.display = "inline-block", this.element.style.setProperty("--fb-bg-scale", "0"), this.options.allowMultiLine || (this.element.style.whiteSpace = "nowrap"), this.addBgElement()) } addBgElement() { const e = document.createElement("div"); this.options.hoverBgClass && e.classList.add(this.options.hoverBgClass), this.element.appendChild(e), e.style.position = "absolute", e.style.inset = this.options.hoverBgInset || It.bgInset, e.style.width = "auto", e.style.height = "auto", e.style.transformOrigin = "0% 50%", e.style.transform = "scaleX(var(--fb-bg-scale))", e.style.backgroundColor = this.options.hoverBgColor || It.bgColor, e.style.mixBlendMode = "difference" } play() { var e; this.reset(), (e = this.split.chars) == null || e.forEach((r, s) => { const i = r.innerHTML; this.gsap.timeline({ onComplete: () => { this.gsap.set(r, { innerHTML: i, delay: .1 }) } }).timeScale(this.options.speedFactor).fromTo(r, { opacity: 0 }, { opacity: 1, innerHTML: () => this.gsap.utils.random(ns), delay: (s + 1) * .06, duration: .03, repeat: 2, repeatDelay: .05, repeatRefresh: !0 }) }), this.gsap.fromTo(this.element, { "--fb-bg-scale": 0 }, { "--fb-bg-scale": 1, duration: 1, ease: "expo" }).timeScale(this.options.speedFactor) } reverse() { this.gsap.killTweensOf(this.element), this.gsap.to(this.element, { "--fb-bg-scale": 0, duration: .6, ease: "power4" }) } reset() { var e; (e = this.split.chars) == null || e.forEach((r, s) => { this.gsap.killTweensOf(r), this.gsap.set(r, { innerHTML: this.originalChars[s] }) }), this.gsap.killTweensOf(this.element), this.gsap.set(this.element, { "--fb-bg-scale": 0 }) } } const as = { colors: ["#6ac9ff", "#2dde68", "#def54f", "#fa7328"] }, os = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "!", "@", "#", "$", "%", "^", "&", "*", "-", "_", "+", "=", ";", ":", "<", ">", ","]; class ls { constructor(e, r, s) { this.element = e, this.gsap = r, this.options = s, this.colors = as.colors, this.originalChars = [], this.split = new pe(this.element, { split: "words,chars" }), this.split.chars && this.init() } init() { this.setup(); const e = () => this.play(); this.element.addEventListener("mouseenter", e, { passive: !0 }), this.element.addEventListener("touchstart", e, { passive: !0 }) } setup() { if (this.split.chars) { this.options.hoverColors.length && (this.colors = this.options.hoverColors); for (const e of this.split.chars) this.originalChars.push(e.innerHTML) } } play() { var e; this.reset(), (e = this.split.chars) == null || e.forEach((r, s) => { const i = r.innerHTML; this.gsap.timeline({ onComplete: () => { this.gsap.set(r, { innerHTML: i, clearProps: "color", delay: .03 }) } }).timeScale(this.options.speedFactor).fromTo(r, { opacity: 0, transformOrigin: "50% 0%" }, { opacity: 1, innerHTML: () => (this.gsap.set(r, { color: this.gsap.utils.random(this.colors) }), this.gsap.utils.random(os)), delay: (s + 1) * .08, duration: .03, ease: "none", repeat: 3, repeatDelay: .1, repeatRefresh: !0 }) }) } reset() { var e; (e = this.split.chars) == null || e.forEach((r, s) => { this.gsap.killTweensOf(r), this.gsap.set(r, { innerHTML: this.originalChars[s], clearProps: "color" }) }) } } const Ot = { bgColor: "rgba(229, 222, 204, 0.1)", bgInset: "-2px -4px" }, Nt = { bgColor: `var(--fb-hover-bg-color, ${Ot.bgColor})`, bgInset: `var(--fb-hover-bg-inset, ${Ot.bgInset})` }; class cs extends Tt { constructor(e, r, s) { super(e, r, s), this.element = e, this.gsap = r, this.options = s } setup() { this.split.chars && (this.originalChars = this.split.chars.map(e => e.innerHTML), this.element.style.position = "relative", this.element.style.display = "inline-block", this.element.style.isolation = "isolate", this.element.style.setProperty("--fb-bg-scale", "0"), this.options.allowMultiLine || (this.element.style.whiteSpace = "nowrap"), this.addBgElement()) } addBgElement() { const e = document.createElement("div"); this.options.hoverBgClass && e.classList.add(this.options.hoverBgClass), this.element.appendChild(e), e.style.position = "absolute", e.style.inset = this.options.hoverBgInset || Nt.bgInset, e.style.zIndex = "-1", e.style.width = "auto", e.style.height = "auto", e.style.transformOrigin = "50% 100%", e.style.transform = "scaleY(var(--fb-bg-scale))", e.style.backgroundColor = this.options.hoverBgColor || Nt.bgColor, e.style.backdropFilter = "blur(5px)" } } Ht([_t]); const hs = [1, 2, 3, 4, 5]; let U; const Ct = new W.Booster({ name: "fb-text-hover", attributes: { "fb-text-hover-type": { defaultValue: 1, validate: t => W.validation.isValidType(Number(t), hs), parse: t => Number(t) }, "fb-text-hover-multi-line": { defaultValue: !1, validate: W.validation.isBoolean, parse: W.parse.stringToBoolean }, "fb-text-hover-speed": { defaultValue: 1, validate: t => { if (!W.validation.isNumber(t)) return !1; const e = Number(t); return e >= .5 && e <= 2 }, parse: t => Number(Number(t).toFixed(1)) }, "fb-text-hover-class": { defaultValue: void 0, parse: t => t.toLowerCase().replaceAll(" ", "-") }, "fb-text-hover-colors": { defaultValue: [], parse: t => { var e; return (e = t.match(/([^(,]+(?:\([^)]+\))?|[^,]+)/g)) == null ? void 0 : e.map(r => r.trim()).filter(r => P(r).isValid()) } }, "fb-text-hover-bg-color": { defaultValue: void 0, validate: t => P(t).isValid(), parse: t => P(t).toRgbString() }, "fb-text-hover-bg-inset": { defaultValue: void 0, validate: t => W.validation.isValidCSSPropertyValue("inset", t) }, "fb-text-hover-color-end": { defaultValue: void 0, validate: t => P(t).isValid(), parse: t => P(t).toRgbString() }, "fb-text-hover-cursor-color": { defaultValue: void 0, validate: t => P(t).isValid(), parse: t => P(t).toRgbString() } }, apply(t, e) { if (!U) return; t.style.fontKerning = "none", t.style.textRendering = "optimizeSpeed"; const r = e.get("fb-text-hover-type"), s = e.get("fb-text-hover-speed"), i = e.get("fb-text-hover-multi-line"), a = e.get("fb-text-hover-class"), l = e.get("fb-text-hover-bg-color"), u = e.get("fb-text-hover-bg-inset"), n = e.get("fb-text-hover-color-end"), o = e.get("fb-text-hover-cursor-color"); switch (r) { case 1: return new ts(t, U, { speedFactor: s, hoverColorEnd: n }); case 2: return new is(t, U, { speedFactor: s, hoverCursorClass: a, hoverCursorColor: o }); case 3: return new Tt(t, U, { speedFactor: s, allowMultiLine: i, hoverBgClass: a, hoverBgColor: l, hoverBgInset: u }); case 4: return new ls(t, U, { speedFactor: s, hoverColors: e.get("fb-text-hover-colors") }); case 5: return new cs(t, U, { speedFactor: s, allowMultiLine: i, hoverBgClass: a, hoverBgColor: l, hoverBgInset: u }) } }, title: "GSAP Text Hover Booster", documentationLink: "https://www.flowbase.co/booster/gsap-text-hover" }), St = async () => { if (U = await W.Dependencies.init().get("gsap", "3.12.x").catch(() => { }), !U) return Ct.log("GSAP isn't initialized"); Ct.init() }; document.readyState === "complete" ? St() : window.addEventListener("load", St)
})();